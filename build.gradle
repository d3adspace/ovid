plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

repositories {
    mavenLocal()
    mavenCentral()
}

group = 'd3.d3adspace'
version = '0.0.2-SNAPSHOT'

java {
    sourceCompatibility = '18'
    targetCompatibility = '18'
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
            pom {
                name = 'lucy'
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/d3adspace/ovid"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

signing {
    def signingKey = findProperty("GPG_KEY")
    def signingPassword = findProperty("GPG_KEY_PASSPHRASE")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}
